version: '2'

services:

  zookeeper:
    image: zookeeper:latest
    ports:
      - "${ZOOKEEPER_PORT}:2181"
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka
    ports:
      - "${KAFKA_PORT}:9092"
    environment:
      DOCKER_API_VERSION: 1.22
      KAFKA_HEAP_OPTS: "-Xmx400M -Xms400M"
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_IP}
      KAFKA_CREATE_TOPICS: "db-ingestion:1:1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: "${DBUSER}"
      POSTGRES_PASSWORD: "${PASSWORD}"
      POSTGRES_DB: "${DATABASE}"
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ../src/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
  
  consumer:
    build: 
      context: ../
      dockerfile: src/docker/consumer/consumer.Dockerfile
    depends_on:
      - "kafka"
      - "zookeeper"
      - "postgres"
    restart: unless-stopped
    
  producer:
    build: 
      context: ../
      dockerfile: src/docker/producer/producer.Dockerfile
    depends_on:
      - "kafka"
      - "zookeeper"
    restart: unless-stopped

  webscraper:
    build: 
      context: ../
      dockerfile: src/docker/webscraper/webscraper.Dockerfile
    depends_on:
      - "kafka"
      - "zookeeper"
    restart: unless-stopped 

volumes:
  postgres-db-volume: 